<!-- ShippingTask BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Mar 01 19:43:46 CET 2020 -->
<bpel:process name="ShippingTask"
         targetNamespace="http://fh-wedel.de/pimpl"
         suppressJoinFailure="yes"
         xmlns:tns="http://fh-wedel.de/pimpl"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://fhwedel.de">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://fhwedel.de" location="../../ShippingService/WebContent/wsdl/ShippingTaskService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://fhwedel.de" location="ShippingTaskService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="ShippingTaskArtifacts.wsdl" namespace="http://fh-wedel.de/pimpl" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:ShippingTask"
                     myRole="ShippingTaskProvider"
                     />
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:ShippingTaskRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:ShippingTaskResponseMessage"/>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in ShippingTask.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:ShippingTask"
                 operation="process" variable="input"
                 createInstance="yes"/>
        
        <!-- Generate reply to synchronous request -->
        
        
        
        <bpel:forEach parallel="no" counterName="Counter" name="forEach1bis10">
            <bpel:startCounterValue expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                <![CDATA[1]]>
            </bpel:startCounterValue>
            <bpel:finalCounterValue expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[10]]></bpel:finalCounterValue>
            <bpel:completionCondition></bpel:completionCondition>
            <bpel:scope>
                <bpel:sequence name="Sequence">
                    <bpel:assign validate="yes" name="LogString">
                        <bpel:copy>
                            <bpel:from>
                                <bpel:literal xml:space="preserve"><impl:log xmlns:impl="http://fhwedel.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <impl:s>empty</impl:s>
</impl:log></bpel:literal>
                            </bpel:from>
                            <bpel:to variable="Counter"></bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke name="log"></bpel:invoke>
                </bpel:sequence>
            </bpel:scope>
        </bpel:forEach>
        <bpel:reply name="replyOutput" 
               partnerLink="client"
               portType="tns:ShippingTask"
               operation="process" 
               variable="output"
               />
    </bpel:sequence>
</bpel:process>

