<!-- CheckReputation BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Tue Jun 05 10:51:26 CEST 2018 -->
<bpel:process name="CheckReputation"
         targetNamespace="http://fh-wedel.de/pimpl"
         suppressJoinFailure="yes"
         xmlns:tns="http://fh-wedel.de/pimpl"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         exitOnStandardFault="yes" xmlns:ns="http://fhwedel.de">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://fhwedel.de" location="CustomerService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="CheckReputationArtifacts.wsdl" namespace="http://fh-wedel.de/pimpl" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:CheckReputation"
                     myRole="CheckReputationProvider"
                     />
        <bpel:partnerLink name="CustomerService" partnerLinkType="tns:CustomerServiceType" partnerRole="CustomerServiceProvider"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:CheckReputationRequestMessage">
        </bpel:variable>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:CheckReputationResponseMessage">
        </bpel:variable>
        <bpel:variable name="customer" messageType="ns:getCustomerByNameResponse">
            <bpel:from>
                <bpel:literal xml:space="preserve"><impl:getCustomerByNameResponse xmlns:impl="http://fhwedel.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <impl:getCustomerByNameReturn>
    <impl:cust_no>impl:cust_no</impl:cust_no>
    <impl:id>0</impl:id>
    <impl:name>impl:name</impl:name>
    <impl:reputation>0</impl:reputation>
  </impl:getCustomerByNameReturn>
</impl:getCustomerByNameResponse>
</bpel:literal>
            </bpel:from>
        </bpel:variable>
        <bpel:variable name="customername" messageType="ns:getCustomerByNameRequest">
            <bpel:from>
                <bpel:literal xml:space="preserve"><impl:getCustomerByName xmlns:impl="http://fhwedel.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <impl:name>impl:name</impl:name>
</impl:getCustomerByName>
</bpel:literal>
            </bpel:from>
        </bpel:variable>
        
        
        
        
        
        
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:faultHandlers>
        <bpel:catch faultName="ns:UnknownCustomer">
            
            <bpel:sequence>
                
            
                
                
                <bpel:assign validate="yes" name="Assign">
                    <bpel:copy>
                        <bpel:from>
                            <bpel:literal xml:space="preserve"><tns:CheckReputationResponse xmlns:tns="http://fh-wedel.de/pimpl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<tns:result>600</tns:result>
</tns:CheckReputationResponse></bpel:literal>
                        </bpel:from>
                        <bpel:to part="payload" variable="output"></bpel:to>
                    </bpel:copy>
                </bpel:assign>
                <bpel:reply name="Reply" partnerLink="client" operation="process" portType="tns:CheckReputation" variable="output"></bpel:reply>
                
            </bpel:sequence>
        </bpel:catch>
    </bpel:faultHandlers>
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in CheckReputation.wsdl 
             -->
        
        <bpel:receive name="Anfrage" partnerLink="client"
                 portType="tns:CheckReputation"
                 operation="process" variable="input"
                 createInstance="yes"/>
        
        <!-- Generate reply to synchronous request -->
        
        <bpel:wait name="Warten">
            <bpel:for><![CDATA["PT5S"]]></bpel:for>
        </bpel:wait>
        
        <bpel:assign validate="yes" name="CustomerServiceRequest"><bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve"><impl:getCustomerByName xmlns:impl="http://fhwedel.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <impl:name>Test</impl:name>
</impl:getCustomerByName>
</bpel:literal>
                </bpel:from>
                <bpel:to variable="customername"></bpel:to>
            </bpel:copy>
            
            
                            <bpel:copy>
                                <bpel:from part="payload" variable="input">
                                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input]]></bpel:query>
                                </bpel:from>
                                <bpel:to part="parameters" variable="customername">
                                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:name]]></bpel:query>
                                </bpel:to>
                            </bpel:copy>
                        
        </bpel:assign>
        <bpel:invoke name="getCustomerByName" partnerLink="CustomerService" operation="getCustomerByName" portType="ns:CustomerService" inputVariable="customername" outputVariable="customer"><bpel:catch><bpel:sequence><bpel:compensate></bpel:compensate><bpel:rethrow></bpel:rethrow></bpel:sequence></bpel:catch></bpel:invoke>
        
        
        <bpel:forEach parallel="no" counterName="Counter" name="forEach1bis10"><bpel:startCounterValue expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                <![CDATA[1]]>
                            </bpel:startCounterValue>
                            <bpel:finalCounterValue expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                <![CDATA[10]]>
                            </bpel:finalCounterValue>
            <bpel:completionCondition></bpel:completionCondition>
            <bpel:scope>
                                <bpel:sequence>
                                    <bpel:assign validate="yes" name="LogString">
                                        
                                        
                                        
                                        <bpel:copy>
                                            <bpel:from><bpel:literal xml:space="preserve"><impl:log xmlns:impl="http://fhwedel.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <impl:s>empty</impl:s>
</impl:log></bpel:literal></bpel:from>
                                            <bpel:to part="parameters" variable="logRequest"></bpel:to>
                                        </bpel:copy>
                                        
                                        <bpel:copy>
                                            <bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                
                                                
                                                
                                                
                                                
                                                
                                                <![CDATA[concat('LOG', $Counter)]]>
                                            </bpel:from>
                                            <bpel:to part="parameters" variable="logRequest">
                                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                                    <![CDATA[ns:s]]>
                                                </bpel:query>
                                            </bpel:to>
                                        </bpel:copy>
                                    </bpel:assign>
                                    <bpel:invoke name="log" partnerLink="CustomerService" operation="log" portType="ns:CustomerService" outputVariable="logResponse" inputVariable="logRequest">
                                    </bpel:invoke>
                                    
                                </bpel:sequence>
                                <bpel:variables>
                                    <bpel:variable name="logResponse" messageType="ns:logResponse"></bpel:variable>
                                    <bpel:variable name="logRequest" messageType="ns:logRequest"></bpel:variable>
                                    
                                </bpel:variables>
                            </bpel:scope>
                        
        </bpel:forEach>
        
        
        
        
        
        
        
        
        
        
        <bpel:if name="If">
            <bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[boolean($customer.parameters/ns:getCustomerByNameReturn/ns:reputation[@xsi:nil='true'])]]></bpel:condition>
            <bpel:assign validate="yes" name="output">
                <bpel:copy>
                    <bpel:from>
                        <bpel:literal xml:space="preserve"><tns:CheckReputationResponse xmlns:tns="http://fh-wedel.de/pimpl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<tns:result>600</tns:result>
</tns:CheckReputationResponse></bpel:literal>
                    </bpel:from><bpel:to variable="output" part="payload"></bpel:to>
            
                            
                </bpel:copy>
                
            </bpel:assign>
            <bpel:else>
                <bpel:assign validate="yes" name="output">
                    <bpel:copy>
                        <bpel:from>
                            <bpel:literal xml:space="preserve"><tns:CheckReputationResponse xmlns:tns="http://fh-wedel.de/pimpl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<tns:result>tns:result</tns:result>
</tns:CheckReputationResponse></bpel:literal>
                        </bpel:from>
                        <bpel:to part="payload" variable="output"></bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                        <bpel:from part="parameters" variable="customer">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:getCustomerByNameReturn/ns:reputation]]></bpel:query>
                        </bpel:from>
                        <bpel:to part="payload" variable="output">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                        </bpel:to>
                    </bpel:copy>
                </bpel:assign>
            </bpel:else>
        </bpel:if>
        <bpel:reply name="Antworten" partnerLink="client" portType="tns:CheckReputation" operation="process" variable="output" />
    </bpel:sequence>
</bpel:process>

